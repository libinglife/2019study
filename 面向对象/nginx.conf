
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

  	server {
          listen       80;
          server_name  s.xnimg.cn a.xnimg.cn xnimg.cn;
          charset utf-8;
          root    F:\\xn.static;
          autoindex       on;
          autoindex_exact_size    on;

          rewrite ^/a?([0-9])+/(.*)$ /$2 last;
          rewrite (.*)\.[0-9]+\.css $1.css;
          rewrite (.*)\.[0-9]+\.js $1.js;
          location / {add_header Cache-Control no-store;
          }

          location ~* \.(?:ttf|eot|woff)$ { 
              add_header "Access-Control-Allow-Origin" "*";
              expires 1M;
              access_log off;
              add_header Cache-Control "public";
              proxy_set_header x-request-filename $request_filename;
          }
    }


  server {
          listen       8090;
          server_name huodong.renren.com;
          charset utf-8;
          root    F:\\xn.static;
          autoindex       on;
          autoindex_exact_size    on;

          rewrite ^/a?([0-9])+/(.*)$ /$2 last;
          rewrite (.*)\.[0-9]+\.css $1.css;
          rewrite (.*)\.[0-9]+\.js $1.js;
          location / {add_header Cache-Control no-store;
          }

          location ~* \.(?:ttf|eot|woff)$ { 
              add_header "Access-Control-Allow-Origin" "*";
              expires 1M;
              access_log off;
              add_header Cache-Control "public";
              proxy_set_header x-request-filename $request_filename;
          }
    }

    server {
          listen       80;
          server_name  zgk.test.com;
          charset utf-8;
          root    F:\\git;
          autoindex       on;
          autoindex_exact_size    on;

          rewrite ^/a?([0-9])+/(.*)$ /$2 last;
          rewrite (.*)\.[0-9]+\.css $1.css;
          rewrite (.*)\.[0-9]+\.js $1.js;
          location / {add_header Cache-Control no-store;
          }

          location ~* \.(?:ttf|eot|woff)$ { 
              add_header "Access-Control-Allow-Origin" "*";
              expires 1M;
              access_log off;
              add_header Cache-Control "public";
              proxy_set_header x-request-filename $request_filename;
          }
    }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
         #   root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


